strict digraph deps {
"stack" [style=dashed];
{rank=max; "base" [shape=box]; };
{rank=max; "ghc-prim" [shape=box]; };
{rank=max; "integer-gmp" [shape=box]; };
{rank=max; "nats"; };
{rank=max; "template-haskell" [shape=box]; };
"Cabal" -> "array";
"Cabal" -> "base";
"Cabal" -> "binary";
"Cabal" -> "bytestring";
"Cabal" -> "containers";
"Cabal" -> "deepseq";
"Cabal" -> "directory";
"Cabal" -> "filepath";
"Cabal" -> "pretty";
"Cabal" -> "process";
"Cabal" -> "time";
"Cabal" -> "unix";
"Glob" -> "base";
"Glob" -> "containers";
"Glob" -> "directory";
"Glob" -> "dlist";
"Glob" -> "filepath";
"Glob" -> "transformers";
"MonadRandom" -> "base";
"MonadRandom" -> "mtl";
"MonadRandom" -> "random";
"MonadRandom" -> "transformers";
"MonadRandom" -> "transformers-compat";
"StateVar" -> "base";
"StateVar" -> "stm";
"StateVar" -> "transformers";
"adjunctions" -> "array";
"adjunctions" -> "base";
"adjunctions" -> "comonad";
"adjunctions" -> "containers";
"adjunctions" -> "contravariant";
"adjunctions" -> "distributive";
"adjunctions" -> "free";
"adjunctions" -> "mtl";
"adjunctions" -> "profunctors";
"adjunctions" -> "semigroupoids";
"adjunctions" -> "semigroups";
"adjunctions" -> "tagged";
"adjunctions" -> "transformers";
"adjunctions" -> "void";
"aeson" -> "attoparsec";
"aeson" -> "base";
"aeson" -> "bytestring";
"aeson" -> "containers";
"aeson" -> "deepseq";
"aeson" -> "dlist";
"aeson" -> "ghc-prim";
"aeson" -> "hashable";
"aeson" -> "mtl";
"aeson" -> "scientific";
"aeson" -> "syb";
"aeson" -> "template-haskell";
"aeson" -> "text";
"aeson" -> "time";
"aeson" -> "unordered-containers";
"aeson" -> "vector";
"ansi-terminal" -> "base";
"ansi-terminal" -> "unix";
"ansi-wl-pprint" -> "ansi-terminal";
"ansi-wl-pprint" -> "base";
"array" -> "base";
"asn1-encoding" -> "asn1-types";
"asn1-encoding" -> "base";
"asn1-encoding" -> "bytestring";
"asn1-encoding" -> "hourglass";
"asn1-encoding" -> "mtl";
"asn1-parse" -> "asn1-encoding";
"asn1-parse" -> "asn1-types";
"asn1-parse" -> "base";
"asn1-parse" -> "bytestring";
"asn1-parse" -> "mtl";
"asn1-types" -> "base";
"asn1-types" -> "bytestring";
"asn1-types" -> "hourglass";
"async" -> "base";
"async" -> "stm";
"attoparsec" -> "array";
"attoparsec" -> "base";
"attoparsec" -> "bytestring";
"attoparsec" -> "containers";
"attoparsec" -> "deepseq";
"attoparsec" -> "scientific";
"attoparsec" -> "text";
"auto-update" -> "base";
"base-orphans" -> "base";
"base-orphans" -> "ghc-prim";
"base16-bytestring" -> "base";
"base16-bytestring" -> "bytestring";
"base16-bytestring" -> "ghc-prim";
"base64-bytestring" -> "base";
"base64-bytestring" -> "bytestring";
"bifunctors" -> "base";
"bifunctors" -> "semigroups";
"bifunctors" -> "tagged";
"binary" -> "array";
"binary" -> "base";
"binary" -> "bytestring";
"binary" -> "containers";
"blaze-builder" -> "base";
"blaze-builder" -> "bytestring";
"blaze-builder" -> "deepseq";
"blaze-builder" -> "text";
"blaze-html" -> "base";
"blaze-html" -> "blaze-builder";
"blaze-html" -> "blaze-markup";
"blaze-html" -> "bytestring";
"blaze-html" -> "text";
"blaze-markup" -> "base";
"blaze-markup" -> "blaze-builder";
"blaze-markup" -> "bytestring";
"blaze-markup" -> "text";
"byteable" -> "base";
"byteable" -> "bytestring";
"bytestring" -> "base";
"bytestring" -> "deepseq";
"bytestring" -> "ghc-prim";
"bytestring" -> "integer-gmp";
"bytestring-builder" -> "base";
"bytestring-builder" -> "bytestring";
"bytestring-builder" -> "deepseq";
"case-insensitive" -> "base";
"case-insensitive" -> "bytestring";
"case-insensitive" -> "deepseq";
"case-insensitive" -> "hashable";
"case-insensitive" -> "text";
"cereal" -> "array";
"cereal" -> "base";
"cereal" -> "bytestring";
"cereal" -> "containers";
"cereal" -> "ghc-prim";
"chunked-data" -> "base";
"chunked-data" -> "blaze-builder";
"chunked-data" -> "bytestring";
"chunked-data" -> "containers";
"chunked-data" -> "mono-traversable";
"chunked-data" -> "semigroups";
"chunked-data" -> "text";
"chunked-data" -> "transformers";
"chunked-data" -> "vector";
"comonad" -> "base";
"comonad" -> "containers";
"comonad" -> "contravariant";
"comonad" -> "distributive";
"comonad" -> "semigroups";
"comonad" -> "tagged";
"comonad" -> "transformers";
"comonad" -> "transformers-compat";
"conduit" -> "base";
"conduit" -> "exceptions";
"conduit" -> "lifted-base";
"conduit" -> "mmorph";
"conduit" -> "mtl";
"conduit" -> "resourcet";
"conduit" -> "transformers";
"conduit" -> "transformers-base";
"conduit-combinators" -> "base";
"conduit-combinators" -> "base16-bytestring";
"conduit-combinators" -> "base64-bytestring";
"conduit-combinators" -> "bytestring";
"conduit-combinators" -> "chunked-data";
"conduit-combinators" -> "conduit";
"conduit-combinators" -> "conduit-extra";
"conduit-combinators" -> "filepath";
"conduit-combinators" -> "monad-control";
"conduit-combinators" -> "mono-traversable";
"conduit-combinators" -> "mwc-random";
"conduit-combinators" -> "primitive";
"conduit-combinators" -> "resourcet";
"conduit-combinators" -> "text";
"conduit-combinators" -> "transformers";
"conduit-combinators" -> "transformers-base";
"conduit-combinators" -> "unix";
"conduit-combinators" -> "unix-compat";
"conduit-combinators" -> "vector";
"conduit-combinators" -> "void";
"conduit-extra" -> "attoparsec";
"conduit-extra" -> "base";
"conduit-extra" -> "blaze-builder";
"conduit-extra" -> "bytestring";
"conduit-extra" -> "conduit";
"conduit-extra" -> "directory";
"conduit-extra" -> "filepath";
"conduit-extra" -> "monad-control";
"conduit-extra" -> "network";
"conduit-extra" -> "primitive";
"conduit-extra" -> "process";
"conduit-extra" -> "resourcet";
"conduit-extra" -> "stm";
"conduit-extra" -> "streaming-commons";
"conduit-extra" -> "text";
"conduit-extra" -> "transformers";
"conduit-extra" -> "transformers-base";
"connection" -> "base";
"connection" -> "byteable";
"connection" -> "bytestring";
"connection" -> "containers";
"connection" -> "data-default-class";
"connection" -> "network";
"connection" -> "socks";
"connection" -> "tls";
"connection" -> "x509";
"connection" -> "x509-store";
"connection" -> "x509-system";
"connection" -> "x509-validation";
"containers" -> "array";
"containers" -> "base";
"containers" -> "deepseq";
"containers" -> "ghc-prim";
"contravariant" -> "StateVar";
"contravariant" -> "base";
"contravariant" -> "semigroups";
"contravariant" -> "transformers";
"contravariant" -> "transformers-compat";
"contravariant" -> "void";
"cookie" -> "base";
"cookie" -> "blaze-builder";
"cookie" -> "bytestring";
"cookie" -> "data-default-class";
"cookie" -> "deepseq";
"cookie" -> "old-locale";
"cookie" -> "text";
"cookie" -> "time";
"cryptohash" -> "base";
"cryptohash" -> "byteable";
"cryptohash" -> "bytestring";
"cryptohash" -> "ghc-prim";
"cryptohash-conduit" -> "base";
"cryptohash-conduit" -> "bytestring";
"cryptohash-conduit" -> "conduit";
"cryptohash-conduit" -> "conduit-extra";
"cryptohash-conduit" -> "cryptohash";
"cryptohash-conduit" -> "resourcet";
"cryptohash-conduit" -> "transformers";
"cryptonite" -> "base";
"cryptonite" -> "bytestring";
"cryptonite" -> "deepseq";
"cryptonite" -> "ghc-prim";
"cryptonite" -> "integer-gmp";
"cryptonite" -> "memory";
"data-default-class" -> "base";
"deepseq" -> "array";
"deepseq" -> "base";
"deepseq-generics" -> "base";
"deepseq-generics" -> "deepseq";
"deepseq-generics" -> "ghc-prim";
"directory" -> "base";
"directory" -> "filepath";
"directory" -> "time";
"directory" -> "unix";
"distributive" -> "base";
"distributive" -> "ghc-prim";
"distributive" -> "tagged";
"distributive" -> "transformers";
"distributive" -> "transformers-compat";
"dlist" -> "base";
"dlist" -> "deepseq";
"dlist-instances" -> "base";
"dlist-instances" -> "dlist";
"dlist-instances" -> "semigroups";
"either" -> "MonadRandom";
"either" -> "base";
"either" -> "bifunctors";
"either" -> "exceptions";
"either" -> "free";
"either" -> "mmorph";
"either" -> "monad-control";
"either" -> "mtl";
"either" -> "profunctors";
"either" -> "semigroupoids";
"either" -> "semigroups";
"either" -> "transformers";
"either" -> "transformers-base";
"enclosed-exceptions" -> "async";
"enclosed-exceptions" -> "base";
"enclosed-exceptions" -> "deepseq";
"enclosed-exceptions" -> "lifted-base";
"enclosed-exceptions" -> "monad-control";
"enclosed-exceptions" -> "transformers";
"enclosed-exceptions" -> "transformers-base";
"exceptions" -> "base";
"exceptions" -> "mtl";
"exceptions" -> "stm";
"exceptions" -> "transformers";
"exceptions" -> "transformers-compat";
"extra" -> "base";
"extra" -> "directory";
"extra" -> "filepath";
"extra" -> "process";
"extra" -> "time";
"extra" -> "unix";
"fast-logger" -> "array";
"fast-logger" -> "auto-update";
"fast-logger" -> "base";
"fast-logger" -> "bytestring";
"fast-logger" -> "bytestring-builder";
"fast-logger" -> "directory";
"fast-logger" -> "filepath";
"fast-logger" -> "text";
"file-embed" -> "base";
"file-embed" -> "bytestring";
"file-embed" -> "directory";
"file-embed" -> "filepath";
"file-embed" -> "template-haskell";
"filelock" -> "base";
"filelock" -> "unix";
"filepath" -> "base";
"free" -> "base";
"free" -> "bifunctors";
"free" -> "comonad";
"free" -> "distributive";
"free" -> "exceptions";
"free" -> "mtl";
"free" -> "prelude-extras";
"free" -> "profunctors";
"free" -> "semigroupoids";
"free" -> "semigroups";
"free" -> "template-haskell";
"free" -> "transformers";
"fsnotify" -> "async";
"fsnotify" -> "base";
"fsnotify" -> "containers";
"fsnotify" -> "directory";
"fsnotify" -> "filepath";
"fsnotify" -> "hfsevents";
"fsnotify" -> "text";
"fsnotify" -> "time";
"fsnotify" -> "unix-compat";
"gitrev" -> "base";
"gitrev" -> "directory";
"gitrev" -> "filepath";
"gitrev" -> "process";
"gitrev" -> "template-haskell";
"hashable" -> "base";
"hashable" -> "bytestring";
"hashable" -> "ghc-prim";
"hashable" -> "integer-gmp";
"hashable" -> "text";
"hastache" -> "base";
"hastache" -> "blaze-builder";
"hastache" -> "bytestring";
"hastache" -> "containers";
"hastache" -> "directory";
"hastache" -> "filepath";
"hastache" -> "ieee754";
"hastache" -> "mtl";
"hastache" -> "process";
"hastache" -> "syb";
"hastache" -> "text";
"hastache" -> "transformers";
"hfsevents" -> "base";
"hfsevents" -> "bytestring";
"hfsevents" -> "cereal";
"hfsevents" -> "mtl";
"hfsevents" -> "text";
"hfsevents" -> "unix";
"hourglass" -> "base";
"hourglass" -> "deepseq";
"http-client" -> "array";
"http-client" -> "base";
"http-client" -> "base64-bytestring";
"http-client" -> "blaze-builder";
"http-client" -> "bytestring";
"http-client" -> "case-insensitive";
"http-client" -> "containers";
"http-client" -> "cookie";
"http-client" -> "data-default-class";
"http-client" -> "deepseq";
"http-client" -> "exceptions";
"http-client" -> "filepath";
"http-client" -> "ghc-prim";
"http-client" -> "http-types";
"http-client" -> "mime-types";
"http-client" -> "network";
"http-client" -> "network-uri";
"http-client" -> "random";
"http-client" -> "streaming-commons";
"http-client" -> "text";
"http-client" -> "time";
"http-client" -> "transformers";
"http-client-tls" -> "base";
"http-client-tls" -> "bytestring";
"http-client-tls" -> "connection";
"http-client-tls" -> "data-default-class";
"http-client-tls" -> "http-client";
"http-client-tls" -> "network";
"http-client-tls" -> "tls";
"http-conduit" -> "base";
"http-conduit" -> "bytestring";
"http-conduit" -> "conduit";
"http-conduit" -> "http-client";
"http-conduit" -> "http-client-tls";
"http-conduit" -> "http-types";
"http-conduit" -> "lifted-base";
"http-conduit" -> "monad-control";
"http-conduit" -> "mtl";
"http-conduit" -> "resourcet";
"http-conduit" -> "transformers";
"http-types" -> "array";
"http-types" -> "base";
"http-types" -> "blaze-builder";
"http-types" -> "bytestring";
"http-types" -> "case-insensitive";
"http-types" -> "text";
"ieee754" -> "base";
"ignore" -> "Glob";
"ignore" -> "base";
"ignore" -> "directory";
"ignore" -> "mtl";
"ignore" -> "path";
"ignore" -> "text";
"kan-extensions" -> "adjunctions";
"kan-extensions" -> "array";
"kan-extensions" -> "base";
"kan-extensions" -> "comonad";
"kan-extensions" -> "containers";
"kan-extensions" -> "contravariant";
"kan-extensions" -> "distributive";
"kan-extensions" -> "free";
"kan-extensions" -> "mtl";
"kan-extensions" -> "semigroupoids";
"kan-extensions" -> "tagged";
"kan-extensions" -> "transformers";
"keys" -> "array";
"keys" -> "base";
"keys" -> "comonad";
"keys" -> "containers";
"keys" -> "free";
"keys" -> "hashable";
"keys" -> "semigroupoids";
"keys" -> "semigroups";
"keys" -> "transformers";
"keys" -> "unordered-containers";
"lifted-base" -> "base";
"lifted-base" -> "monad-control";
"lifted-base" -> "transformers-base";
"memory" -> "base";
"memory" -> "bytestring";
"memory" -> "deepseq";
"memory" -> "ghc-prim";
"mime-types" -> "base";
"mime-types" -> "bytestring";
"mime-types" -> "containers";
"mime-types" -> "text";
"mmorph" -> "base";
"mmorph" -> "transformers";
"monad-control" -> "base";
"monad-control" -> "stm";
"monad-control" -> "transformers";
"monad-control" -> "transformers-base";
"monad-control" -> "transformers-compat";
"monad-logger" -> "base";
"monad-logger" -> "blaze-builder";
"monad-logger" -> "bytestring";
"monad-logger" -> "conduit";
"monad-logger" -> "conduit-extra";
"monad-logger" -> "exceptions";
"monad-logger" -> "fast-logger";
"monad-logger" -> "lifted-base";
"monad-logger" -> "monad-control";
"monad-logger" -> "monad-loops";
"monad-logger" -> "mtl";
"monad-logger" -> "resourcet";
"monad-logger" -> "stm";
"monad-logger" -> "stm-chans";
"monad-logger" -> "template-haskell";
"monad-logger" -> "text";
"monad-logger" -> "transformers";
"monad-logger" -> "transformers-base";
"monad-logger" -> "transformers-compat";
"monad-loops" -> "base";
"mono-traversable" -> "base";
"mono-traversable" -> "bytestring";
"mono-traversable" -> "comonad";
"mono-traversable" -> "containers";
"mono-traversable" -> "dlist";
"mono-traversable" -> "dlist-instances";
"mono-traversable" -> "hashable";
"mono-traversable" -> "semigroupoids";
"mono-traversable" -> "semigroups";
"mono-traversable" -> "text";
"mono-traversable" -> "transformers";
"mono-traversable" -> "unordered-containers";
"mono-traversable" -> "vector";
"mono-traversable" -> "vector-algorithms";
"mono-traversable" -> "vector-instances";
"mtl" -> "base";
"mtl" -> "transformers";
"mwc-random" -> "base";
"mwc-random" -> "primitive";
"mwc-random" -> "time";
"mwc-random" -> "vector";
"network" -> "base";
"network" -> "bytestring";
"network" -> "unix";
"network-uri" -> "base";
"network-uri" -> "deepseq";
"network-uri" -> "parsec";
"old-locale" -> "base";
"optparse-applicative" -> "ansi-wl-pprint";
"optparse-applicative" -> "base";
"optparse-applicative" -> "process";
"optparse-applicative" -> "transformers";
"optparse-applicative" -> "transformers-compat";
"optparse-simple" -> "base";
"optparse-simple" -> "either";
"optparse-simple" -> "gitrev";
"optparse-simple" -> "optparse-applicative";
"optparse-simple" -> "template-haskell";
"optparse-simple" -> "transformers";
"parsec" -> "base";
"parsec" -> "bytestring";
"parsec" -> "mtl";
"parsec" -> "text";
"path" -> "base";
"path" -> "exceptions";
"path" -> "filepath";
"path" -> "template-haskell";
"path-pieces" -> "base";
"path-pieces" -> "text";
"path-pieces" -> "time";
"pem" -> "base";
"pem" -> "base64-bytestring";
"pem" -> "bytestring";
"pem" -> "mtl";
"persistent" -> "aeson";
"persistent" -> "attoparsec";
"persistent" -> "base";
"persistent" -> "base64-bytestring";
"persistent" -> "blaze-html";
"persistent" -> "blaze-markup";
"persistent" -> "bytestring";
"persistent" -> "conduit";
"persistent" -> "containers";
"persistent" -> "exceptions";
"persistent" -> "fast-logger";
"persistent" -> "lifted-base";
"persistent" -> "monad-control";
"persistent" -> "monad-logger";
"persistent" -> "mtl";
"persistent" -> "old-locale";
"persistent" -> "path-pieces";
"persistent" -> "resource-pool";
"persistent" -> "resourcet";
"persistent" -> "scientific";
"persistent" -> "silently";
"persistent" -> "tagged";
"persistent" -> "template-haskell";
"persistent" -> "text";
"persistent" -> "time";
"persistent" -> "transformers";
"persistent" -> "transformers-base";
"persistent" -> "unordered-containers";
"persistent" -> "vector";
"persistent-sqlite" -> "aeson";
"persistent-sqlite" -> "base";
"persistent-sqlite" -> "bytestring";
"persistent-sqlite" -> "conduit";
"persistent-sqlite" -> "containers";
"persistent-sqlite" -> "monad-control";
"persistent-sqlite" -> "monad-logger";
"persistent-sqlite" -> "old-locale";
"persistent-sqlite" -> "persistent";
"persistent-sqlite" -> "resourcet";
"persistent-sqlite" -> "text";
"persistent-sqlite" -> "time";
"persistent-sqlite" -> "transformers";
"persistent-template" -> "aeson";
"persistent-template" -> "base";
"persistent-template" -> "bytestring";
"persistent-template" -> "containers";
"persistent-template" -> "ghc-prim";
"persistent-template" -> "monad-control";
"persistent-template" -> "monad-logger";
"persistent-template" -> "path-pieces";
"persistent-template" -> "persistent";
"persistent-template" -> "tagged";
"persistent-template" -> "template-haskell";
"persistent-template" -> "text";
"persistent-template" -> "transformers";
"persistent-template" -> "unordered-containers";
"pointed" -> "base";
"pointed" -> "comonad";
"pointed" -> "containers";
"pointed" -> "data-default-class";
"pointed" -> "hashable";
"pointed" -> "kan-extensions";
"pointed" -> "semigroupoids";
"pointed" -> "semigroups";
"pointed" -> "stm";
"pointed" -> "tagged";
"pointed" -> "transformers";
"pointed" -> "transformers-compat";
"pointed" -> "unordered-containers";
"prelude-extras" -> "base";
"pretty" -> "base";
"pretty" -> "deepseq";
"pretty" -> "ghc-prim";
"primitive" -> "base";
"primitive" -> "ghc-prim";
"primitive" -> "transformers";
"process" -> "base";
"process" -> "deepseq";
"process" -> "directory";
"process" -> "filepath";
"process" -> "unix";
"profunctors" -> "base";
"profunctors" -> "comonad";
"profunctors" -> "distributive";
"profunctors" -> "tagged";
"profunctors" -> "transformers";
"project-template" -> "base";
"project-template" -> "base64-bytestring";
"project-template" -> "bytestring";
"project-template" -> "conduit";
"project-template" -> "conduit-extra";
"project-template" -> "containers";
"project-template" -> "directory";
"project-template" -> "filepath";
"project-template" -> "mtl";
"project-template" -> "resourcet";
"project-template" -> "text";
"project-template" -> "transformers";
"random" -> "base";
"random" -> "time";
"resource-pool" -> "base";
"resource-pool" -> "hashable";
"resource-pool" -> "monad-control";
"resource-pool" -> "stm";
"resource-pool" -> "time";
"resource-pool" -> "transformers";
"resource-pool" -> "transformers-base";
"resource-pool" -> "vector";
"resourcet" -> "base";
"resourcet" -> "containers";
"resourcet" -> "exceptions";
"resourcet" -> "lifted-base";
"resourcet" -> "mmorph";
"resourcet" -> "monad-control";
"resourcet" -> "mtl";
"resourcet" -> "transformers";
"resourcet" -> "transformers-base";
"resourcet" -> "transformers-compat";
"retry" -> "base";
"retry" -> "data-default-class";
"retry" -> "exceptions";
"retry" -> "transformers";
"safe" -> "base";
"scientific" -> "array";
"scientific" -> "base";
"scientific" -> "bytestring";
"scientific" -> "deepseq";
"scientific" -> "ghc-prim";
"scientific" -> "hashable";
"scientific" -> "integer-gmp";
"scientific" -> "text";
"semigroupoids" -> "base";
"semigroupoids" -> "base-orphans";
"semigroupoids" -> "bifunctors";
"semigroupoids" -> "comonad";
"semigroupoids" -> "containers";
"semigroupoids" -> "contravariant";
"semigroupoids" -> "distributive";
"semigroupoids" -> "semigroups";
"semigroupoids" -> "tagged";
"semigroupoids" -> "transformers";
"semigroupoids" -> "transformers-compat";
"semigroups" -> "base";
"semigroups" -> "bytestring";
"semigroups" -> "containers";
"semigroups" -> "deepseq";
"semigroups" -> "hashable";
"semigroups" -> "nats";
"semigroups" -> "text";
"semigroups" -> "unordered-containers";
"silently" -> "base";
"silently" -> "deepseq";
"silently" -> "directory";
"socks" -> "base";
"socks" -> "bytestring";
"socks" -> "cereal";
"socks" -> "network";
"split" -> "base";
"stack" -> "Cabal";
"stack" -> "aeson";
"stack" -> "async";
"stack" -> "attoparsec";
"stack" -> "base";
"stack" -> "base16-bytestring";
"stack" -> "base64-bytestring";
"stack" -> "bifunctors";
"stack" -> "binary";
"stack" -> "blaze-builder";
"stack" -> "byteable";
"stack" -> "bytestring";
"stack" -> "conduit";
"stack" -> "conduit-combinators";
"stack" -> "conduit-extra";
"stack" -> "containers";
"stack" -> "cryptohash";
"stack" -> "cryptohash-conduit";
"stack" -> "deepseq";
"stack" -> "deepseq-generics";
"stack" -> "directory";
"stack" -> "either";
"stack" -> "enclosed-exceptions";
"stack" -> "exceptions";
"stack" -> "extra";
"stack" -> "fast-logger";
"stack" -> "file-embed";
"stack" -> "filelock";
"stack" -> "filepath";
"stack" -> "fsnotify";
"stack" -> "gitrev";
"stack" -> "hashable";
"stack" -> "hastache";
"stack" -> "http-client";
"stack" -> "http-client-tls";
"stack" -> "http-conduit";
"stack" -> "http-types";
"stack" -> "ignore";
"stack" -> "lifted-base";
"stack" -> "monad-control";
"stack" -> "monad-logger";
"stack" -> "monad-loops";
"stack" -> "mtl";
"stack" -> "old-locale";
"stack" -> "optparse-applicative";
"stack" -> "optparse-simple";
"stack" -> "path";
"stack" -> "persistent";
"stack" -> "persistent-sqlite";
"stack" -> "persistent-template";
"stack" -> "pretty";
"stack" -> "process";
"stack" -> "project-template";
"stack" -> "resourcet";
"stack" -> "retry";
"stack" -> "safe";
"stack" -> "split";
"stack" -> "stm";
"stack" -> "streaming-commons";
"stack" -> "tar";
"stack" -> "template-haskell";
"stack" -> "temporary";
"stack" -> "text";
"stack" -> "time";
"stack" -> "transformers";
"stack" -> "transformers-base";
"stack" -> "unix";
"stack" -> "unix-compat";
"stack" -> "unordered-containers";
"stack" -> "vector";
"stack" -> "vector-binary-instances";
"stack" -> "void";
"stack" -> "word8";
"stack" -> "yaml";
"stack" -> "zlib";
"stm" -> "array";
"stm" -> "base";
"stm-chans" -> "base";
"stm-chans" -> "stm";
"streaming-commons" -> "array";
"streaming-commons" -> "base";
"streaming-commons" -> "blaze-builder";
"streaming-commons" -> "bytestring";
"streaming-commons" -> "directory";
"streaming-commons" -> "network";
"streaming-commons" -> "process";
"streaming-commons" -> "random";
"streaming-commons" -> "stm";
"streaming-commons" -> "text";
"streaming-commons" -> "transformers";
"streaming-commons" -> "unix";
"streaming-commons" -> "zlib";
"syb" -> "base";
"tagged" -> "base";
"tagged" -> "template-haskell";
"tar" -> "array";
"tar" -> "base";
"tar" -> "bytestring";
"tar" -> "directory";
"tar" -> "filepath";
"tar" -> "time";
"temporary" -> "base";
"temporary" -> "directory";
"temporary" -> "exceptions";
"temporary" -> "filepath";
"temporary" -> "transformers";
"temporary" -> "unix";
"text" -> "array";
"text" -> "base";
"text" -> "binary";
"text" -> "bytestring";
"text" -> "deepseq";
"text" -> "ghc-prim";
"text" -> "integer-gmp";
"time" -> "base";
"time" -> "deepseq";
"tls" -> "asn1-encoding";
"tls" -> "asn1-types";
"tls" -> "async";
"tls" -> "base";
"tls" -> "byteable";
"tls" -> "bytestring";
"tls" -> "cereal";
"tls" -> "cryptonite";
"tls" -> "data-default-class";
"tls" -> "memory";
"tls" -> "mtl";
"tls" -> "network";
"tls" -> "transformers";
"tls" -> "x509";
"tls" -> "x509-store";
"tls" -> "x509-validation";
"transformers" -> "base";
"transformers-base" -> "base";
"transformers-base" -> "stm";
"transformers-base" -> "transformers";
"transformers-base" -> "transformers-compat";
"transformers-compat" -> "base";
"transformers-compat" -> "transformers";
"unix" -> "base";
"unix" -> "bytestring";
"unix" -> "time";
"unix-compat" -> "base";
"unix-compat" -> "unix";
"unordered-containers" -> "base";
"unordered-containers" -> "deepseq";
"unordered-containers" -> "hashable";
"vector" -> "base";
"vector" -> "deepseq";
"vector" -> "ghc-prim";
"vector" -> "primitive";
"vector-algorithms" -> "base";
"vector-algorithms" -> "bytestring";
"vector-algorithms" -> "mtl";
"vector-algorithms" -> "mwc-random";
"vector-algorithms" -> "primitive";
"vector-algorithms" -> "vector";
"vector-binary-instances" -> "base";
"vector-binary-instances" -> "binary";
"vector-binary-instances" -> "cereal";
"vector-binary-instances" -> "vector";
"vector-instances" -> "base";
"vector-instances" -> "comonad";
"vector-instances" -> "keys";
"vector-instances" -> "pointed";
"vector-instances" -> "semigroupoids";
"vector-instances" -> "semigroups";
"vector-instances" -> "vector";
"void" -> "base";
"void" -> "ghc-prim";
"void" -> "hashable";
"void" -> "semigroups";
"word8" -> "base";
"x509" -> "asn1-encoding";
"x509" -> "asn1-parse";
"x509" -> "asn1-types";
"x509" -> "base";
"x509" -> "bytestring";
"x509" -> "containers";
"x509" -> "cryptonite";
"x509" -> "directory";
"x509" -> "filepath";
"x509" -> "hourglass";
"x509" -> "memory";
"x509" -> "mtl";
"x509" -> "pem";
"x509" -> "process";
"x509-store" -> "asn1-encoding";
"x509-store" -> "asn1-types";
"x509-store" -> "base";
"x509-store" -> "bytestring";
"x509-store" -> "containers";
"x509-store" -> "cryptonite";
"x509-store" -> "directory";
"x509-store" -> "filepath";
"x509-store" -> "mtl";
"x509-store" -> "pem";
"x509-store" -> "process";
"x509-store" -> "x509";
"x509-system" -> "base";
"x509-system" -> "bytestring";
"x509-system" -> "containers";
"x509-system" -> "directory";
"x509-system" -> "filepath";
"x509-system" -> "mtl";
"x509-system" -> "pem";
"x509-system" -> "process";
"x509-system" -> "x509";
"x509-system" -> "x509-store";
"x509-validation" -> "asn1-encoding";
"x509-validation" -> "asn1-types";
"x509-validation" -> "base";
"x509-validation" -> "byteable";
"x509-validation" -> "bytestring";
"x509-validation" -> "containers";
"x509-validation" -> "cryptonite";
"x509-validation" -> "data-default-class";
"x509-validation" -> "directory";
"x509-validation" -> "filepath";
"x509-validation" -> "hourglass";
"x509-validation" -> "memory";
"x509-validation" -> "mtl";
"x509-validation" -> "network";
"x509-validation" -> "pem";
"x509-validation" -> "process";
"x509-validation" -> "x509";
"x509-validation" -> "x509-store";
"yaml" -> "aeson";
"yaml" -> "attoparsec";
"yaml" -> "base";
"yaml" -> "bytestring";
"yaml" -> "conduit";
"yaml" -> "containers";
"yaml" -> "directory";
"yaml" -> "enclosed-exceptions";
"yaml" -> "filepath";
"yaml" -> "resourcet";
"yaml" -> "scientific";
"yaml" -> "text";
"yaml" -> "transformers";
"yaml" -> "unordered-containers";
"yaml" -> "vector";
"zlib" -> "base";
"zlib" -> "bytestring";
}
